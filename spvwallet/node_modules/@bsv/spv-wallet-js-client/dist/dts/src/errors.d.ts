import { TransactionInput } from '@bsv/sdk';
import { Logger } from './logger';
import { ClientOptions, TxInput } from './types';
export declare class SpvWalletError extends Error {
    constructor(message: string);
}
export declare class ErrorInvalidOptions extends SpvWalletError {
    constructor(logger: Logger, options: ClientOptions);
}
export declare class ErrorNoXPrivToSignTransaction extends SpvWalletError {
    constructor();
}
export declare class ErrorClientInitNoXpriv extends SpvWalletError {
    constructor();
}
export declare class ErrorTxIdsDontMatchToDraft extends SpvWalletError {
    input: TxInput;
    draftInput: TransactionInput;
    constructor(logger: Logger, input: TxInput, index: number, draftInput: TransactionInput);
}
export declare class ErrorNoAdminKey extends SpvWalletError {
    constructor();
}
export declare class ErrorResponse extends SpvWalletError {
    response: Response;
    content: string;
    constructor(logger: Logger, response: Response, content: string);
}
export declare class ErrorWrongHex extends SpvWalletError {
    value: string;
    constructor(wrongHex: string);
}
export declare class ErrorNoXPrivToGenerateTOTP extends SpvWalletError {
    constructor();
}
export declare class ErrorNoXPrivToValidateTOTP extends SpvWalletError {
    constructor();
}
export declare class ErrorWrongTOTP extends SpvWalletError {
    constructor();
}
